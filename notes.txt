server --> logic 

controller --> servlet 

what is servlet? --> class 


class A extends Thread{

}
class A implements Runnable{

}


class SignupServlet extends HttpServlet{

}

* 
class SignupServlet implements Servlet{

}


HttpServlet ---> .jar --> lib 
1) tomcat 
2) net 

--------------------------


right click on project --> properties --> java build path ---> libraries -> add external jar --> browse to
	apache tomcat folder --> lib --> servlet-api.jar open --> order and exports --> select all -->
	apply and close...

servlet -->
1) class extends HttpServlet
2) service - override -- logic 
3) web.xml --> servlet or annotation

client--user--request
server---response 

--------------------------
InputData.jsp
	
	name : xyz
	birthyear
	gender 
	hobby : X Y Z E  [checkbox] 
	
	[submit]
	
	Name : XYZ [ name is missing ] 
	birthYear : XXXX 
	Gender : UPPERCASE  
	Hobby  : X,Z 
	
--------------------------
jsp --> java servlet pages / java server pages  ==> [ html + java ] 


java logic --> scriptlet  <% %> 
java print --> expression <%= %> 

bydefault html content 


	
------------------------------


String email = request.getParameter("email");

if( email.endsWith("@gmail.com")   || email.endsWith("@ymail.com")) {


}


XXX@XXX.XXX	-->	regex 

String -->

x@x.com 

1) length >= 6
2) @   >= 1st index 
3) .   >= 4th index 


mail server --> smtp --> 

email send api --> google 

send otp to their email --> 

tejas@ygmail.com --> send an otp --> mail --> 



------------------------------
//1 inMemory -- collections  -ArrayList Bean
//2 database 

signup
login

1.signup //n [ user must enter unique email ] 
2.spinTheWheel //n
3.Dashboard 
4.Winner 
5.LeaderBoard



royal lucky draw app 


in your app all users are signup and they get unique number when they signup 
signup -> 

1.
ram ram@gmail.com  [ 12345 ] 



1 ram    XX   12345
2 sita   XX   42345
3 ravan  XX   62345
4 laxman xx   45345
 


 
2 --> it will generate random number and display winner 
winner is sita :: 42345

[1000] //every user have 0 credits 


3.
1 ram    XX   12345	5000
2 sita   XX   42345	6000
3 ravan  XX   62345	0
4 laxman xx   45345	2000 



4.
Sita XX 42345 6000 


5.
1 sita   XX   42345	6000
2 ram    XX   12345	5000
3 laxman xx   45345	2000 
4 ravan  XX   62345	0



------------------------------------------------------------


cookie --> storage --> client [user ] ---> browser --> 


------------------------------------------------------------

filter --> 

	pre processing 
	
whatsapp --> 
	
	x -- > 25 mb image -->  y
	
	
	x -->  whatsapp server ---> y 
	25 --> upload -->server ---> download ---> y
	50 server 
	
	x    compress image--> upload---> whatsapp server---> download y  [10mb] compress version 
	 
	


icici.com
	pakistan ---> 
	
	login 
			username
			password 
						submit 
						
						
	icici - server -->      filter ip -> white list  country  |    username/password -> authenticate  --> home | login error 
	



facebook.com 

	profile --->  52 mb --->    compress  server --> profile [ ] -->
	

--------how to implement filter? 

1) implements Filter interface 
2) init doFilter destroy  
3) web.xml -->  mapping 



filter-> ? validation = > 

------------------------------------------------

can we have multiple filter for 1 -- servlet  --yes 


Age



------------------------------------------------
user data store -->

				cookie ---  client side -- browser 
				session --- server side -- server's memory 
				Cookie c = new Cookie();
				HttpSession ==> new ==> only server 
				
login <-session-> logout 


user --> abc.com --> server --> login.jsp ---> session new 
		 abc.com/abc --> server --> abc.jsp --> session ?

		user1					user2						user3 
	abc.com [session]			abc.com/abc[session] 
	abc.com/abc 


------------------------------------------------

user1			user2			user3
ronak			tejas			aish
friend aish 


HttpSession session= request.getSession();

session.setAttribute("key",value); 

session.getAttribute("key")
 
------------------------------------------------

to destroy session 	we can use 
	session.invalidate(); 

we can destroy using 
		1) programmatically	
			1.1) session.invalidate()
			1.2) setMaxInactivInterval() 
		2)	xml - configuration 
				session-timeout 

session time out ?
	1) prog. setMaxInactiveInterval()
	2) xml - session-timeout 


------------------------------------------------

amazon --> 

servlet / jsp / filter / session / cookie / collections / bean / validation 
bootstrap or css /   


1) name -> number 
2) email -> xx@xx.xxx 
3) email unique 
4) required  


Signup : [ firstname ,email ,password ]  [ customer ] 
Login  : [ email , password ]  

admin never signup* [ you need to add  1 static admin ] 


we have two types of user in our app 
1) admin
2) customer 

admin can manage product , manager orders , manage users. 
manage -> add update delete list 

admin -> Login 

AdminDashboard.jsp 

List Users |   List Products | List Orders 

Add Product -->    productName , price , qty 
Add user -> add Customer 

iphone
laptop
watch


Customer 

Login.jsp 
			email | password 
			
CustomerHome.jsp

Welcome  Ram , 

link -> View Cart, View Orders 


iphone			laptop			watch 
1,39,000	    85000			25000
[addtocart]    [addtocart]     [addtocart]	


*customer add iphone and laptop using addtocart 

view cart -> click -->		
	iphone  1,39,000
	laptip	  85000
	-------------------
			2,24,000
			
	[ checkout ]		




------------------------------------------------

amazon --> 
facebook --> 
500 online 
 
server stop --> mail --> 

server start --> nse.com connection establish 
server shutdown --> nse.com connection disconnect 

j2ee -> listener --> listen activities --> events --> 


session create 
session destroy 
server start 
server shutdown 
abc.com --> 500 pay --> payment gateway --> passive 
request --> set get remove 

j2ee --> listener interface -> 

 
1) class implements listener --> 
2) override methods 
3) mapping into web.xml 


total count --> online -->
			userCounter=0 
		session create --> userCounter ++ 
		session destroy --> userCounter -- 
		
		
------------------------------------------------

database --> query -->   sql  --> console 

web - application --> user ---> console 

	Signup.jsp 
	Login.jsp 
	
java --> database 

jdbc 

drivers --> help --> connection --> query 
java.sql.*;


vendor-> lib jar --> 
#driver# --> 
	java ? how to connect with database? 
	
	oracle -> 
	pg  -> 
	mysql -> 
	mongodb  -> lib 
	

type 1 -- native -- odbc ->single [computer dbconnection]
type 2 --- native---multi 
type 3 ---- pure java ---- load ---use 
type 4#  ---pure java --- use 


mysql --->
	driver --> mysql-connector 
	
	DbConnection 
			-> connection 
			
	
create database decclubadv;

use decclubadv;
	
show tables;

create table users (
	userId integer primary key auto_increment,
	firstName varchar(30),
	email varchar(30),
	password varchar(30) 
);


M [ bean dao ] 
V [ jsp ] 
C  [ servlets ] 



		//Statement 
		
		//PreparedStatement --> preCompile 
		
		//CallableStatement  -- store procedure , function , views --> PL/SQL 
		
		
		executeUpdate() => insert , delete , update  
		
		executeQuert() => select 
		
insert into users (firstName,email,password) values ('ram','ram@gmai.com','ram123');

compile 
eval -> parser ->  
optimiZer
execution 
 


------------------------------------------------------------
server start 

	-> MyServlet ---->	class memory? 
	
			load class 
			create instance 
			init() // init(SerlvetConfig) 
			service() 


	second request --> MyServlet 
			class memory? 
				service()
				
				
	third request --> service()
	
	nth request -->			class memory? 
							service()
	
	server -->shut down --> release 
		destroy() --> release --> init() 
	
	
	
					


			load class 
			create instance 
			init() // no aws open 
			service() 
			destroy() // no aws close 



if i make request of login servlet 500 time then how many time 
init-----1
service --------500
destroy ---------0
and main method call -----0 
? 

--------------------------------------------------------------------------------------------------------------------------
Filter life cycle 

	init()-----------1 ----server start .....
	doFilter()----------- nTime
	destroy() ------1 ---server shut down....
	
--------------------------------------------------------------------------------------------------------------------------

servlet-->LoginServlet 

		email / password ---> servlet fix --> 

--------------------------------------------------------------------------------------------------------------------------
_____Connection________ interface is used to hold database  connection object ? 



_PreparedStatement_____ interface is used to execute sql query in database? 



_executeQuery()_______ method is used to execute read only query ? 



__SQLException_________ exception is thrown by jdbc api ? 


_____executeUpdate()_________ method is used to execute insert update delete query ? 



___ResultSet__ is known as cursor in database ? 

--------------------------------------------------------------------------------------------------------------------------

Project Management :- 

idea -> submit 

		title : expense manager 
		description : [ text , url ] 
		technology : 
		author : 
		company : 
		

users -> idea search 
			MEAN 
			
users -> 
project -> 
bid -> 

			Dashboard 
			
			Add Idea  [ Manage CRUD ] 
			View My Projects 
			Search Ideas 
			My Bids
			
			 
data dictionary :-

users 
	userId , firstName ,email,password 
project 
	projectId , title , description , technology , userId[FK] , company , isBid
bid 
	userId , projectId  ,amount , status 
	 
			
--------------------------------------------------------------------------------------------------------------------------


servlet config -- specific to single servlet 

	<init-param>
 		<param-name>email</param-name>
 		<param-value>admin@gmail.com</param-value>
 	</init-param>

	ServletConfig 




we need to fetch value from any servlet 

ServletContext ==> application ==> all servlet 




--------------------------------------------------------------------------------------------------------------------------
jsp -> servlet

servlet container --> web container --> server --> tomcat 

.jsp -->
	1) translation  -> .jsp => .java [  jspInit , _jspService , jspDestroy  ] 
	2) compilation -> .java => .class 
	3) load class 
	4) create instance 
	5) init 
	6) service [ jsp content ] 
	7) destroy 
	 
 _ under score ==> this mehtod is not override by  you 

 

-----------------------------------------------------

jsp 

		if  <% if %>   ${ }
		
			<%= %> 
			
			<%  %> 
			
			<% %>  


<b> 
<i> 

<if> <foreach> <out> 

1) core** 
2) sql 
3) format 
4) xml 


1) 
jar -> jstl-1.2.jar  8.5

2) jsp -> import -> use 

-----------------------------------------------------
developer | user 
customtag :- 

	we have two category in custom tag 
	1) SimpleTag  [ SimpleTag , SimpleTagSupport ]  
	2) ClassicTag [ Tag , BodyTag , IterationTag , TagSupport] 
	
link jsp-api.jar in your project from tomcat/lib [ same as servlet-api.jar ] 


steps:
	1)  tag handler class - logic [ extends SimpleTagSupport ]
	2)  .tld  [ tag information ] [ web-inf]
	3)  map .tld  into web.xml
	4)  jsp import - taglib 
	
	
	<greet></greet>  => tag -> no attribute no body content 
	

	<sqr num="2"></sqr>

	tag - with attribute no body 
	
	com->stag-> java ->SqrTag



--------------------------------

classic Tag :- 

1) Tag Handler class
2) .tld
3) .xml mapping .tld 
4) jsp import use 
 












